{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  posts: [{\n    title: 'about jai',\n    author: 'jai',\n    userid: 0,\n    tags: ['bio', 'resume'],\n    typography: 'i am a developer of my own world',\n    date: '2-07-2022'\n  }],\n  users: [{\n    username: 'jai',\n    mobile: 8756875687,\n    password: '112233'\n  }],\n  sessionIndex: 0\n};\nconst DataSlice = createSlice({\n  name: 'DataSlice',\n  initialState,\n  reducers: {\n    addBlog: (state, action) => {\n      state.posts.push({\n        title: action.payload.title,\n        author: action.payload.author,\n        userid: action.payload.userid,\n        tags: [...action.payload.tags],\n        typography: action.payload.typography,\n        date: new Date().toJSON().slice(0, 10)\n      });\n    },\n    addUser: (state, action) => {\n      state.users.push({\n        name: action.payload.name,\n        email: action.payload.email,\n        number: action.payload.number,\n        pic: action.payload.pic,\n        password: action.payload.password\n      });\n    },\n    updatePost: (state, action) => {\n      // {,index,title,author,userid,tags,typography,date}\n      state.posts[action.payload.index] = {\n        ...state.posts[action.payload.index],\n        title: action.payload.titl0e,\n        tags: [...action.payload.tags],\n        typography: action.payload.typography,\n        date: new Date().toJSON().slice(0, 10)\n      };\n    },\n    deleteBlog: (state, action) => {\n      state.posts.splice(action.payload.table, 1);\n    }\n  }\n});\nexport default DataSlice.reducer;\nexport const {\n  addBlog,\n  addUser,\n  updatePost,\n  deleteBlog\n} = DataSlice.actions;","map":{"version":3,"names":["createSlice","initialState","posts","title","author","userid","tags","typography","date","users","username","mobile","password","sessionIndex","DataSlice","name","reducers","addBlog","state","action","push","payload","Date","toJSON","slice","addUser","email","number","pic","updatePost","index","titl0e","deleteBlog","splice","table","reducer","actions"],"sources":["/home/cedcoss/mark01/A-React Work/01_firstReactApp/83-blogApp/blog/src/Features/DataSlice.tsx"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState={\nposts:[\n    {\n        title:'about jai',\n        author:'jai',\n        userid:0,\n        tags:['bio','resume'],\n        typography:'i am a developer of my own world',\n        date:'2-07-2022'\n    }],\nusers:[{\n    username:'jai',\n    mobile:8756875687,\n    password:'112233'\n}],\nsessionIndex:0\n}\n\n\nconst DataSlice:any=createSlice({\n    name:'DataSlice',\n    initialState,\n    reducers:{\n    addBlog:(state,action)=>{\n        state.posts.push( {\n            title: action.payload.title,\n            author: action.payload.author,\n            userid: action.payload.userid,\n            tags:[...action.payload.tags],\n            typography: action.payload.typography,\n            date:new Date().toJSON().slice(0, 10)\n        })\n    },\n    addUser:(state,action)=>{\n        state.users.push({\n            name : action.payload.name,\n            email:action.payload.email,\n            number:action.payload.number,\n            pic:action.payload.pic,\n            password:action.payload.password\n        })\n    },\n    updatePost:(state,action)=>{\n        // {,index,title,author,userid,tags,typography,date}\n        state.posts[action.payload.index]={\n            ...state.posts[action.payload.index],\n            title: action.payload.titl0e,\n            tags:[...action.payload.tags],\n            typography: action.payload.typography,\n            date:new Date().toJSON().slice(0, 10)\n        }\n    },\n    deleteBlog:(state,action)=>{\n        state.posts.splice(action.payload.table,1)\n    },\n\n\n\n    }\n})\n\nexport default DataSlice.reducer;\nexport const { addBlog,addUser,updatePost,deleteBlog } = DataSlice.actions"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAC;EACnBC,KAAK,EAAC,CACF;IACIC,KAAK,EAAC,WAAW;IACjBC,MAAM,EAAC,KAAK;IACZC,MAAM,EAAC,CAAC;IACRC,IAAI,EAAC,CAAC,KAAK,EAAC,QAAQ,CAAC;IACrBC,UAAU,EAAC,kCAAkC;IAC7CC,IAAI,EAAC;EACT,CAAC,CAAC;EACNC,KAAK,EAAC,CAAC;IACHC,QAAQ,EAAC,KAAK;IACdC,MAAM,EAAC,UAAU;IACjBC,QAAQ,EAAC;EACb,CAAC,CAAC;EACFC,YAAY,EAAC;AACb,CAAC;AAGD,MAAMC,SAAa,GAACd,WAAW,CAAC;EAC5Be,IAAI,EAAC,WAAW;EAChBd,YAAY;EACZe,QAAQ,EAAC;IACTC,OAAO,EAAC,CAACC,KAAK,EAACC,MAAM,KAAG;MACpBD,KAAK,CAAChB,KAAK,CAACkB,IAAI,CAAE;QACdjB,KAAK,EAAEgB,MAAM,CAACE,OAAO,CAAClB,KAAK;QAC3BC,MAAM,EAAEe,MAAM,CAACE,OAAO,CAACjB,MAAM;QAC7BC,MAAM,EAAEc,MAAM,CAACE,OAAO,CAAChB,MAAM;QAC7BC,IAAI,EAAC,CAAC,GAAGa,MAAM,CAACE,OAAO,CAACf,IAAI,CAAC;QAC7BC,UAAU,EAAEY,MAAM,CAACE,OAAO,CAACd,UAAU;QACrCC,IAAI,EAAC,IAAIc,IAAI,EAAE,CAACC,MAAM,EAAE,CAACC,KAAK,CAAC,CAAC,EAAE,EAAE;MACxC,CAAC,CAAC;IACN,CAAC;IACDC,OAAO,EAAC,CAACP,KAAK,EAACC,MAAM,KAAG;MACpBD,KAAK,CAACT,KAAK,CAACW,IAAI,CAAC;QACbL,IAAI,EAAGI,MAAM,CAACE,OAAO,CAACN,IAAI;QAC1BW,KAAK,EAACP,MAAM,CAACE,OAAO,CAACK,KAAK;QAC1BC,MAAM,EAACR,MAAM,CAACE,OAAO,CAACM,MAAM;QAC5BC,GAAG,EAACT,MAAM,CAACE,OAAO,CAACO,GAAG;QACtBhB,QAAQ,EAACO,MAAM,CAACE,OAAO,CAACT;MAC5B,CAAC,CAAC;IACN,CAAC;IACDiB,UAAU,EAAC,CAACX,KAAK,EAACC,MAAM,KAAG;MACvB;MACAD,KAAK,CAAChB,KAAK,CAACiB,MAAM,CAACE,OAAO,CAACS,KAAK,CAAC,GAAC;QAC9B,GAAGZ,KAAK,CAAChB,KAAK,CAACiB,MAAM,CAACE,OAAO,CAACS,KAAK,CAAC;QACpC3B,KAAK,EAAEgB,MAAM,CAACE,OAAO,CAACU,MAAM;QAC5BzB,IAAI,EAAC,CAAC,GAAGa,MAAM,CAACE,OAAO,CAACf,IAAI,CAAC;QAC7BC,UAAU,EAAEY,MAAM,CAACE,OAAO,CAACd,UAAU;QACrCC,IAAI,EAAC,IAAIc,IAAI,EAAE,CAACC,MAAM,EAAE,CAACC,KAAK,CAAC,CAAC,EAAE,EAAE;MACxC,CAAC;IACL,CAAC;IACDQ,UAAU,EAAC,CAACd,KAAK,EAACC,MAAM,KAAG;MACvBD,KAAK,CAAChB,KAAK,CAAC+B,MAAM,CAACd,MAAM,CAACE,OAAO,CAACa,KAAK,EAAC,CAAC,CAAC;IAC9C;EAIA;AACJ,CAAC,CAAC;AAEF,eAAepB,SAAS,CAACqB,OAAO;AAChC,OAAO,MAAM;EAAElB,OAAO;EAACQ,OAAO;EAACI,UAAU;EAACG;AAAW,CAAC,GAAGlB,SAAS,CAACsB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}