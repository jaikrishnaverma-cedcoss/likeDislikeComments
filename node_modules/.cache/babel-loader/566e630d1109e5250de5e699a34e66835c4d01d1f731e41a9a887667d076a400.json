{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  posts: [],\n  users: [{\n    name: 'jai krishna verma',\n    email: 'jai@gmail.com',\n    number: 8787878787,\n    pic: 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSP_jBNGDAl_gCziVLX5q8vuci3Z8VmfK8Rrdtct54&s',\n    password: '2222'\n  }],\n  sessionIndex: -1,\n  editIndex: -1,\n  msg: ''\n};\nexport const fetchData = createAsyncThunk('DataSlice/fetchData', async () => {\n  console.log('aa gya');\n  let res = await fetch('https://api.pexels.com/v1/curated?page=11&per_page=30', {\n    headers: {\n      Authorization: '563492ad6f917000010000018ca9c228a1e543fabdc77f6bc56284f9',\n      'Content-Type': 'multipart/mixed'\n    }\n  });\n  res = await res.json();\n  // .then(res=>res.json())\n  // .then(clg=>console.log(clg))\n  res = await res.photos.map(x => {\n    let y = {\n      ...x,\n      like: 0,\n      dislike: 0,\n      comments: []\n    };\n    return y;\n  });\n  console.log(res);\n  return res;\n});\nconst DataSlice = createSlice({\n  name: 'DataSlice',\n  initialState,\n  reducers: {\n    addBlog: (state, action) => {\n      state.posts.push({\n        title: action.payload.title,\n        author: action.payload.author,\n        userid: action.payload.userid,\n        category: action.payload.category,\n        tags: ['blog'],\n        pic: action.payload.pic,\n        typography: action.payload.typography,\n        date: new Date().toJSON().slice(0, 10).split('-').reverse().join('-')\n      });\n    },\n    addUser: (state, action) => {\n      state.users.push({\n        name: action.payload.name,\n        email: action.payload.email,\n        number: action.payload.number,\n        pic: action.payload.pic,\n        password: action.payload.password\n      });\n    },\n    deleteBlog: (state, action) => {\n      state.posts[action.payload.index].comments.splice(action.payload.commentIndex, 1);\n    },\n    setSeesionIndex: (state, action) => {\n      state.sessionIndex = action.payload;\n    },\n    Like: (state, action) => {\n      state.posts[action.payload].like += 1;\n    },\n    Dislike: (state, action) => {\n      state.posts[action.payload].dislike += 1;\n    },\n    Comments: (state, action) => {\n      state.posts[action.payload.index].comments.push(action.payload.comment);\n    },\n    persistDatbase: (state, action) => {\n      state.posts = JSON.parse(action.payload).posts;\n      state.sessionIndex = JSON.parse(action.payload).sessionIndex;\n      state.users = JSON.parse(action.payload).users;\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(fetchData.pending, (state, action) => {\n      state.msg = 'loading';\n    });\n    builder.addCase(fetchData.rejected, (state, action) => {\n      state.msg = 'Api Request Rejected';\n    });\n    builder.addCase(fetchData.fulfilled, (state, action) => {\n      state.posts = [...action.payload];\n      state.msg = '';\n    });\n  }\n});\nexport default DataSlice.reducer;\nexport const {\n  addBlog,\n  addUser,\n  updatePost,\n  deleteBlog,\n  setSeesionIndex,\n  persistDatbase,\n  Like,\n  Dislike,\n  Comments\n} = DataSlice.actions;","map":{"version":3,"names":["createAsyncThunk","createSlice","initialState","posts","users","name","email","number","pic","password","sessionIndex","editIndex","msg","fetchData","console","log","res","fetch","headers","Authorization","json","photos","map","x","y","like","dislike","comments","DataSlice","reducers","addBlog","state","action","push","title","payload","author","userid","category","tags","typography","date","Date","toJSON","slice","split","reverse","join","addUser","deleteBlog","index","splice","commentIndex","setSeesionIndex","Like","Dislike","Comments","comment","persistDatbase","JSON","parse","extraReducers","builder","addCase","pending","rejected","fulfilled","reducer","updatePost","actions"],"sources":["/home/cedcoss/mark01/A-React Work/01_firstReactApp/83-blogApp/likeDislikes/src/Features/DataSlice.tsx"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState: any = {\n    posts: [\n\n    ],\n    users: [{\n        name: 'jai krishna verma',\n        email: 'jai@gmail.com',\n        number: 8787878787,\n        pic: 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSP_jBNGDAl_gCziVLX5q8vuci3Z8VmfK8Rrdtct54&s',\n        password: '2222'\n    }],\n    sessionIndex: -1,\n    editIndex: -1,\n    msg: ''\n}\n\nexport const fetchData = createAsyncThunk('DataSlice/fetchData', async () => {\n    console.log('aa gya')\n    let res: any = await fetch('https://api.pexels.com/v1/curated?page=11&per_page=30', {\n        headers: {\n            Authorization: '563492ad6f917000010000018ca9c228a1e543fabdc77f6bc56284f9',\n            'Content-Type': 'multipart/mixed'\n        }\n    })\n    res = await res.json()\n    // .then(res=>res.json())\n    // .then(clg=>console.log(clg))\n    res = await res.photos.map((x: any) => { let y = { ...x, like: 0, dislike: 0, comments: [] }; return y })\n    console.log(res)\n    return res\n\n})\n\nconst DataSlice: any = createSlice({\n    name: 'DataSlice',\n    initialState,\n    reducers: {\n        addBlog: (state, action) => {\n            state.posts.push({\n                title: action.payload.title,\n                author: action.payload.author,\n                userid: action.payload.userid,\n                category: action.payload.category,\n                tags: ['blog'],\n                pic: action.payload.pic,\n                typography: action.payload.typography,\n                date: new Date().toJSON().slice(0, 10).split('-').reverse().join('-')\n            })\n        },\n        addUser: (state, action) => {\n            state.users.push({\n                name: action.payload.name,\n                email: action.payload.email,\n                number: action.payload.number,\n                pic: action.payload.pic,\n                password: action.payload.password\n            })\n        },\n\n        deleteBlog: (state, action) => {\n            state.posts[action.payload.index].comments.splice(action.payload.commentIndex, 1)\n        },\n        setSeesionIndex: (state, action) => {\n            state.sessionIndex = action.payload\n        },\n        Like: (state, action) => {\n            state.posts[action.payload].like += 1\n        },\n        Dislike: (state, action) => {\n            state.posts[action.payload].dislike += 1\n        },\n        Comments: (state, action) => {\n            state.posts[action.payload.index].comments.push(action.payload.comment)\n        },\n        persistDatbase: (state, action) => {\n            state.posts = JSON.parse(action.payload).posts\n            state.sessionIndex = JSON.parse(action.payload).sessionIndex\n            state.users = JSON.parse(action.payload).users\n        }\n    },\n    extraReducers: (builder) => {\n        builder.addCase(fetchData.pending, (state, action) => {\n            state.msg = 'loading'\n        })\n        builder.addCase(fetchData.rejected, (state, action) => {\n            state.msg = 'Api Request Rejected'\n        })\n        builder.addCase(fetchData.fulfilled, (state, action) => {\n            state.posts = [...action.payload]\n            state.msg = ''\n        })\n    }\n})\n\nexport default DataSlice.reducer;\nexport const { addBlog, addUser, updatePost, deleteBlog, setSeesionIndex, persistDatbase, Like, Dislike, Comments } = DataSlice.actions"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}