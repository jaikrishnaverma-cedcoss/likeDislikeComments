{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  posts: [{\n    title: 'about jai',\n    author: 'jai',\n    category: 'bio',\n    userid: 0,\n    tags: ['bio', 'resume'],\n    typography: 'i am a developer of my own world i am a developer of my own world i am a developer of my own world i am a developer of my own world',\n    date: '2-07-2022',\n    pic: ''\n  }],\n  users: [{\n    name: 'jai krishna verma',\n    email: 'jai@gmail.com',\n    number: 8787878787,\n    pic: 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSP_jBNGDAl_gCziVLX5q8vuci3Z8VmfK8Rrdtct54&s',\n    password: '2222'\n  }],\n  sessionIndex: 0\n};\nconst DataSlice = createSlice({\n  name: 'DataSlice',\n  initialState,\n  reducers: {\n    addBlog: (state, action) => {\n      localStorage.setItem(\"dataSlice\", JSON.stringify(state));\n      state.posts.push({\n        title: action.payload.title,\n        author: action.payload.author,\n        userid: action.payload.userid,\n        category: action.payload.category,\n        tags: ['blog'],\n        pic: action.payload.pic,\n        typography: action.payload.typography,\n        date: new Date().toJSON().slice(0, 10)\n      });\n    },\n    addUser: (state, action) => {\n      state.users.push({\n        name: action.payload.name,\n        email: action.payload.email,\n        number: action.payload.number,\n        pic: action.payload.pic,\n        password: action.payload.password\n      });\n    },\n    updatePost: (state, action) => {\n      // {,index,title,author,userid,tags,typography,date}\n      state.posts[action.payload.index] = {\n        ...state.posts[action.payload.index],\n        title: action.payload.title,\n        tags: [...action.payload.tags],\n        typography: action.payload.typography,\n        date: new Date().toJSON().slice(0, 10)\n      };\n    },\n    deleteBlog: (state, action) => {\n      state.posts.splice(action.payload.table, 1);\n    },\n    setSeesionIndex: (state, action) => {\n      state.sessionIndex = action.payload;\n    },\n    persistDatbase: (state, action) => {\n      console.log('py', action.payload);\n      state.posts = action.payload.json().posts;\n      state.sessionIndex = action.payload.json().sessionIndex;\n      state;\n    }\n  }\n});\nexport default DataSlice.reducer;\nexport const {\n  addBlog,\n  addUser,\n  updatePost,\n  deleteBlog,\n  setSeesionIndex,\n  persistDatbase\n} = DataSlice.actions;","map":{"version":3,"names":["createSlice","initialState","posts","title","author","category","userid","tags","typography","date","pic","users","name","email","number","password","sessionIndex","DataSlice","reducers","addBlog","state","action","localStorage","setItem","JSON","stringify","push","payload","Date","toJSON","slice","addUser","updatePost","index","deleteBlog","splice","table","setSeesionIndex","persistDatbase","console","log","json","reducer","actions"],"sources":["/home/cedcoss/mark01/A-React Work/01_firstReactApp/83-blogApp/blog/src/Features/DataSlice.tsx"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState={\nposts:[\n    {\n        title:'about jai',\n        author:'jai',\n        category:'bio',\n        userid:0,\n        tags:['bio','resume'],\n        typography:'i am a developer of my own world i am a developer of my own world i am a developer of my own world i am a developer of my own world',\n        date:'2-07-2022',\n        pic:''\n    }],\nusers:[{\n    name : 'jai krishna verma',\n    email:'jai@gmail.com',\n    number:8787878787,\n    pic:'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSP_jBNGDAl_gCziVLX5q8vuci3Z8VmfK8Rrdtct54&s',\n    password:'2222'\n}],\nsessionIndex:0\n}\n\n\nconst DataSlice:any=createSlice({\n    name:'DataSlice',\n    initialState,\n    reducers:{\n    addBlog:(state,action)=>{\n                 localStorage.setItem(\"dataSlice\", JSON.stringify(state));\n          \n        state.posts.push( {\n            title: action.payload.title,\n            author: action.payload.author,\n            userid: action.payload.userid,\n            category:action.payload.category,\n            tags:['blog'],\n            pic:action.payload.pic,\n            typography: action.payload.typography,\n            date:new Date().toJSON().slice(0, 10)\n        })\n    },\n    addUser:(state,action)=>{\n        state.users.push({\n            name : action.payload.name,\n            email:action.payload.email,\n            number:action.payload.number,\n            pic:action.payload.pic,\n            password:action.payload.password\n        })\n    },\n    updatePost:(state,action)=>{\n        // {,index,title,author,userid,tags,typography,date}\n        state.posts[action.payload.index]={\n            ...state.posts[action.payload.index],\n            title: action.payload.title,\n            tags:[...action.payload.tags],\n            typography: action.payload.typography,\n            date:new Date().toJSON().slice(0, 10)\n        }\n    },\n    deleteBlog:(state,action)=>{\n        state.posts.splice(action.payload.table,1)\n    },\n    setSeesionIndex:(state,action)=>{\n        state.sessionIndex=action.payload\n    },\n    persistDatbase:(state,action)=>{\n       console.log('py',action.payload)\n       state.posts=action.payload.json().posts\n       state.sessionIndex=action.payload.json().sessionIndex\n       state\n       \n    }\n\n\n    }\n})\n\nexport default DataSlice.reducer;\nexport const { addBlog,addUser,updatePost,deleteBlog,setSeesionIndex,persistDatbase} = DataSlice.actions"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAC;EACnBC,KAAK,EAAC,CACF;IACIC,KAAK,EAAC,WAAW;IACjBC,MAAM,EAAC,KAAK;IACZC,QAAQ,EAAC,KAAK;IACdC,MAAM,EAAC,CAAC;IACRC,IAAI,EAAC,CAAC,KAAK,EAAC,QAAQ,CAAC;IACrBC,UAAU,EAAC,qIAAqI;IAChJC,IAAI,EAAC,WAAW;IAChBC,GAAG,EAAC;EACR,CAAC,CAAC;EACNC,KAAK,EAAC,CAAC;IACHC,IAAI,EAAG,mBAAmB;IAC1BC,KAAK,EAAC,eAAe;IACrBC,MAAM,EAAC,UAAU;IACjBJ,GAAG,EAAC,mGAAmG;IACvGK,QAAQ,EAAC;EACb,CAAC,CAAC;EACFC,YAAY,EAAC;AACb,CAAC;AAGD,MAAMC,SAAa,GAACjB,WAAW,CAAC;EAC5BY,IAAI,EAAC,WAAW;EAChBX,YAAY;EACZiB,QAAQ,EAAC;IACTC,OAAO,EAAC,CAACC,KAAK,EAACC,MAAM,KAAG;MACXC,YAAY,CAACC,OAAO,CAAC,WAAW,EAAEC,IAAI,CAACC,SAAS,CAACL,KAAK,CAAC,CAAC;MAEjEA,KAAK,CAAClB,KAAK,CAACwB,IAAI,CAAE;QACdvB,KAAK,EAAEkB,MAAM,CAACM,OAAO,CAACxB,KAAK;QAC3BC,MAAM,EAAEiB,MAAM,CAACM,OAAO,CAACvB,MAAM;QAC7BE,MAAM,EAAEe,MAAM,CAACM,OAAO,CAACrB,MAAM;QAC7BD,QAAQ,EAACgB,MAAM,CAACM,OAAO,CAACtB,QAAQ;QAChCE,IAAI,EAAC,CAAC,MAAM,CAAC;QACbG,GAAG,EAACW,MAAM,CAACM,OAAO,CAACjB,GAAG;QACtBF,UAAU,EAAEa,MAAM,CAACM,OAAO,CAACnB,UAAU;QACrCC,IAAI,EAAC,IAAImB,IAAI,EAAE,CAACC,MAAM,EAAE,CAACC,KAAK,CAAC,CAAC,EAAE,EAAE;MACxC,CAAC,CAAC;IACN,CAAC;IACDC,OAAO,EAAC,CAACX,KAAK,EAACC,MAAM,KAAG;MACpBD,KAAK,CAACT,KAAK,CAACe,IAAI,CAAC;QACbd,IAAI,EAAGS,MAAM,CAACM,OAAO,CAACf,IAAI;QAC1BC,KAAK,EAACQ,MAAM,CAACM,OAAO,CAACd,KAAK;QAC1BC,MAAM,EAACO,MAAM,CAACM,OAAO,CAACb,MAAM;QAC5BJ,GAAG,EAACW,MAAM,CAACM,OAAO,CAACjB,GAAG;QACtBK,QAAQ,EAACM,MAAM,CAACM,OAAO,CAACZ;MAC5B,CAAC,CAAC;IACN,CAAC;IACDiB,UAAU,EAAC,CAACZ,KAAK,EAACC,MAAM,KAAG;MACvB;MACAD,KAAK,CAAClB,KAAK,CAACmB,MAAM,CAACM,OAAO,CAACM,KAAK,CAAC,GAAC;QAC9B,GAAGb,KAAK,CAAClB,KAAK,CAACmB,MAAM,CAACM,OAAO,CAACM,KAAK,CAAC;QACpC9B,KAAK,EAAEkB,MAAM,CAACM,OAAO,CAACxB,KAAK;QAC3BI,IAAI,EAAC,CAAC,GAAGc,MAAM,CAACM,OAAO,CAACpB,IAAI,CAAC;QAC7BC,UAAU,EAAEa,MAAM,CAACM,OAAO,CAACnB,UAAU;QACrCC,IAAI,EAAC,IAAImB,IAAI,EAAE,CAACC,MAAM,EAAE,CAACC,KAAK,CAAC,CAAC,EAAE,EAAE;MACxC,CAAC;IACL,CAAC;IACDI,UAAU,EAAC,CAACd,KAAK,EAACC,MAAM,KAAG;MACvBD,KAAK,CAAClB,KAAK,CAACiC,MAAM,CAACd,MAAM,CAACM,OAAO,CAACS,KAAK,EAAC,CAAC,CAAC;IAC9C,CAAC;IACDC,eAAe,EAAC,CAACjB,KAAK,EAACC,MAAM,KAAG;MAC5BD,KAAK,CAACJ,YAAY,GAACK,MAAM,CAACM,OAAO;IACrC,CAAC;IACDW,cAAc,EAAC,CAAClB,KAAK,EAACC,MAAM,KAAG;MAC5BkB,OAAO,CAACC,GAAG,CAAC,IAAI,EAACnB,MAAM,CAACM,OAAO,CAAC;MAChCP,KAAK,CAAClB,KAAK,GAACmB,MAAM,CAACM,OAAO,CAACc,IAAI,EAAE,CAACvC,KAAK;MACvCkB,KAAK,CAACJ,YAAY,GAACK,MAAM,CAACM,OAAO,CAACc,IAAI,EAAE,CAACzB,YAAY;MACrDI,KAAK;IAER;EAGA;AACJ,CAAC,CAAC;AAEF,eAAeH,SAAS,CAACyB,OAAO;AAChC,OAAO,MAAM;EAAEvB,OAAO;EAACY,OAAO;EAACC,UAAU;EAACE,UAAU;EAACG,eAAe;EAACC;AAAc,CAAC,GAAGrB,SAAS,CAAC0B,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}